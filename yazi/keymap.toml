[[mgr.prepend_keymap]]
on   = "<Enter>"
run  = "plugin smart-enter"
desc = "Enter the child directory, or open the file"

[[mgr.prepend_keymap]]
on   = "l"
run  = "plugin smart-enter"
desc = "Enter the child directory, or open the file"

[[mgr.prepend_keymap]]
on   = "i"
run  = "cd --interactive"
desc = "go"

[[mgr.prepend_keymap]]
on   = [ "g", "m" ]
run  = "cd /run/media/viktor"
desc = "Enter to connected flash drive"

[[mgr.prepend_keymap]]
on  = "y"
run = [
 '''
 shell --silent --confirm --stdin -- 
 for file in "$@"; do 
   printf 'file://%s\n' "$(realpath "$file")"; 
 done | xclip -selection clipboard -t text/uri-list
 ''',
 "yank"
]

[[mgr.prepend_keymap]]
on   = "T"
run  = "plugin toggle-pane min-preview"
desc = "Show or hide the preview pane"

[[mgr.prepend_keymap]]
on   = "T"
run  = "plugin toggle-pane max-preview"
desc = "Maximize or restore the preview pane"

[[mgr.prepend_keymap]]
on = "R"
run = [
'''
shell --block --
for file in "$@"; do
  case "$file" in
    *.hurl)
      tmp_file=$(mktemp)
      if [ -f "variables.env" ]; then
        hurl --variables-file variables.env "$file" > "$tmp_file" 2>&1
      else
        hurl "$file" > "$tmp_file" 2>&1
      fi
      if jq . "$tmp_file" > /dev/null 2>&1; then
        jq . "$tmp_file" > "${tmp_file}.json"
        mv "${tmp_file}.json" "$tmp_file"
      fi
      less "$tmp_file"
      rm -f "$tmp_file"
      ;;
    *.sh) /bin/zsh "$file"; echo ""; read -p "Press enter to continue..."; ;;
    *.py) python3 "$file"; echo -e "Press enter to continue..."; read -r;;
    *.js) node "$file"; echo -e "Press enter to continue..."; read -r;;
  esac
done
'''
]
